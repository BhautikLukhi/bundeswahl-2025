---
title: "02 Social Media ENGLISH"
format:
  html:
    code-fold: true
    message: false
    warning: false
---

```{r setup}
library(tidyverse)
library(ggtext)
library(gganimate)
library(gt)
library(gtsummary)
library(here)
library(haven)
library(labelled)
library(treemapify)
library(grid)


knitr::opts_chunk$set(dev = "ragg_png")

source(here("R", "custom-theme.R"))
theme_set(theme_custom())
```

## Datenquelle

### Bericht

<https://library.fes.de/pdf-files/a-p-b/21722.pdf>

### Daten einlesen

```{r read-data}
df <- read_stata(here("data", "EPW2024", "ew24AW.dta"))
```

## Datenexploration

```{r}
df |> 
  select(geschlecht, alter) |> 
  mutate(across(everything(), haven::as_factor)) |> 
  tbl_summary()
```

```{r}
create_summary_table <- function(x) {
  df <- df |> 
    select(all_of(x)) |> 
    mutate(across(everything(), haven::as_factor))
  colnames(df) <- "var"
  df |> 
    tbl_summary(
      label = list("var" = "Label")
    )
}

vars <- colnames(df)[str_detect(colnames(df), "^v32_")]
var_labels <- unlist(var_label(df[, vars]))

map(vars, create_summary_table) |> 
  tbl_merge(
    tab_spanner = var_labels
  )

```

Welcher Anteil informiert sich ausschließlich über Internet und Social Media?

```{r fig.width=8}

var_labels_v31 <- df |> 
  select(starts_with("v31_")) |> 
  get_variable_labels() |> 
  unlist()

var_labels_v31 <- c("TV o. Mediathek", "Radio o. Audiothek", 
                    "Gedruckte/elektronische Zeitungen", "Beiträge im Internet",
                    "Beiträge in sozialen Medien")
names(var_labels_v31) <- paste0("v31_", 1:5)

val_labels_v31 <- val_labels(df$v31_1) |> 
  unlist()

df |> 
  select(starts_with("v31_")) |> 
  na.omit() |> 
  pivot_longer(cols = everything(), names_to = "variable", values_to = "freq") |> 
  mutate(quelle = var_labels_v31[variable]) |> 
  count(quelle, freq) |> 
  group_by(quelle) |> 
  mutate(share = n / sum(n)) |> 
  ungroup() |> 
  mutate(freq = as.numeric(freq) - 1) |> 
  ggplot(aes(freq, share)) +
  geom_col() + 
  scale_x_reverse() +
  scale_y_continuous(labels = scales::label_percent()) +
  coord_flip() +
  facet_wrap(vars(quelle), nrow = 1) +
  theme(
    strip.text = element_textbox(width = 0.8, hjust = 0)
  )

```

## Datenvisualisierungen

### Nutzung von Informationsquellen

```{r nutzung-informationsquellen-prep, fig.width=7}

var_labels_v31 <- df |> 
  select(starts_with("v31_")) |> 
  get_variable_labels() |> 
  unlist()

var_labels_v31 <- c("TV or media library", "Radio or audio library", 
                    "Printed/ electronic newspapers", "Posts on the internet",
                    "Posts on social media")
names(var_labels_v31) <- paste0("v31_", 1:5)

n_responses_v31 <- df |> 
  select(starts_with("v31_")) |> 
  na.omit() |> nrow()

df_informationsquellen <- df |> 
  select(starts_with("v31_")) |> 
  na.omit() |> 
  pivot_longer(cols = everything(), names_to = "variable", values_to = "freq") |> 
  mutate(quelle = var_labels_v31[variable]) |> 
  mutate(
    quelle = factor(quelle, levels = rev(var_labels_v31)),
    freq = as.numeric(freq) - 1,
    freq_cat = case_when(
      freq == 0 ~ "Never",
      freq <= 2 ~ "On 1-2 days",
      freq <= 5 ~ "On 3-5 days",
      freq <= 7 ~ "On 6-7 days"
    ),
    freq_cat = factor(freq_cat, 
                      levels = c("Never", "On 1-2 days", 
                                 "On 3-5 days", "On 6-7 days"))
  ) |> 
  count(quelle, freq_cat) |> 
  group_by(quelle) |> 
  mutate(share = n / sum(n)) |> 
  ungroup()

```

```{r nutzung-informationsquellen-plot-1, fig.width=7}

df_informationsquellen |> 
  ggplot(aes(freq_cat, share)) +
  geom_col(
    aes(fill = quelle %in% c("Posts on the internet", "Posts on social media")),
    width = 0.75) + 
  geom_text(
    aes(
      label = scales::percent(share, accuracy = 1),
      hjust = ifelse(share < 0.25, -0.3, 1.3),
      col = ifelse(share < 0.25, "grey10", "white")),
    family = "Roboto Slab", fontface = "bold"
  ) +
  geom_hline(aes(yintercept = 0)) +
  scale_y_continuous(
    labels = scales::label_percent(), expand = expansion(mult = c(0, 0.05))) +
  scale_color_identity() +
  scale_fill_manual(values = c("FALSE" = color_pal[1], "TRUE" = color_pal[3])) +
  coord_flip() +
  facet_wrap(vars(quelle), nrow = 1) +
  guides(fill = "none") +
  labs(
    title = sprintf(
      "<span style='color: %s'>Social media posts and internet</span> as important sources of political<br>information for young people", color_pal[3]),
    subtitle = "Frequency of use of different sources of information about the election campaign and parties for the European elections",
    caption = sprintf(
      "Data: Youth Election Study on the 2024 European Elections (%s respondents aged 15 to 20). Visualization: Ansgar Wolsing & Thorsten Faas.", 
      scales::number(n_responses_v31, big.mark = ",")),
    x = NULL, 
    y = NULL
  ) +
  theme(
    strip.text = element_textbox(
      family = "Roboto Condensed SemiBold", size = 10, width = 0.8, height = 0.1, 
      hjust = 0, vjust = 1, margin = margin(t = 4, b = 3)),
    panel.grid = element_blank(),
    axis.text.x = element_blank()
  )

```

### Inhalte mit Politikbezug in Sozialen Medien

```{r beitraege-politik-social-media}
var_labels <- df |> 
  select(starts_with("v33_")) |> 
  get_variable_labels() |> 
  unlist()

freq_politikbezug <- df |> 
  select(invcode, starts_with("v33_")) |> 
  mutate(across(starts_with("v33_"), to_factor)) |> 
  pivot_longer(cols = starts_with("v33_"), names_to = "platform", values_to = "freq_politikbezug") |> 
  mutate(platform = var_labels[platform]) |> 
  na.omit() |> 
  count(platform, freq_politikbezug) |> 
  mutate(freq_politikbezug2 = case_when(
    str_sub(freq_politikbezug, 1, 1) %in% c(1, 2) ~ "Selten/nie",
    str_sub(freq_politikbezug, 1, 1) %in% c(4, 5) ~ "Häufig/sehr häufig",
    str_sub(freq_politikbezug, 1, 1) == 3 ~ "Manchmal"
  )) |> 
  add_count(platform, freq_politikbezug2, wt = n, name = "n2") 

# Reihenfolge der Plattformen
platforms_freq_order <- freq_politikbezug |> 
  add_count(platform, wt = n, name = "total_n") |> 
  filter(freq_politikbezug2 == "Häufig/sehr häufig") |> 
  mutate(share = n2 / total_n) |> 
  arrange(share) |> 
  distinct(platform) |> 
  pull()

n_responses_v32 <- sum(!is.na(df$v32_1))
```

**Idee:** Die Höhe der Balken der Plattform spiegelt die Anzahl der Nutzer wieder. Social Media mit hoher Nutzung haben entsprechend höhere Balken als Plattformen mit geringerer Nutzung. Bluesky geht in dieser Darstellung unter, der Balken zwischen Threads und Facebook ist nicht erkennbar.

```{r beitraege-politik-social-media-marimekko, fig.width=8, fig.height=8}

# Nutzung
platforms_mapping <- var_label(select(df, starts_with("v32_"))) |> as.character()
names(platforms_mapping) <- colnames(select(df, starts_with("v32_")))

df_platform_users <- df |> 
  select(starts_with("v32_")) |> 
  na.omit() |> 
  pivot_longer(cols = everything(), names_to = "platform", values_to = "used") |> 
  mutate(
    platform = platforms_mapping[platform],
    platform = ifelse(platform == "Tiktok", "TikTok", platform)) |> 
  group_by(platform) |> 
  summarize(
    n_users = sum(used == 1),
    share_users = mean(used == 1))
  

df_marimekko <- freq_politikbezug |> 
  filter(!platform %in% c("Anderes Netzwerk", "BlueSky")) |> 
  mutate(platform = factor(platform, levels = platforms_freq_order)) |> 
  arrange(platform) |> 
  # get the lower and upper boundary for the rectangle for each platform
  add_count(platform, wt = n, name = "n_nutzer_platform") |> 
  nest(data = -c(platform, n_nutzer_platform)) |> 
  mutate(
    n_nutzer_platform_cumul = cumsum(n_nutzer_platform),
    n_nutzer_platform_cumul_lag = lag(n_nutzer_platform_cumul, 1, default = 0),
    pos_label = n_nutzer_platform_cumul_lag + n_nutzer_platform / 2
    ) |> 
  unnest(data) |> 
  # get the position for each segment within a bar (platform)
  group_by(platform) |> 
  arrange(desc(freq_politikbezug), .by_group = TRUE) |> 
  mutate(
    share_politikbezug = n / sum(n),
    share_politikbezug_cumul = cumsum(share_politikbezug),
    share_politikbezug_cumul_lag = lag(share_politikbezug_cumul, 1, default = 0)
  ) |> 
  ungroup() |> 
  select(-c(n, n2, n_nutzer_platform, freq_politikbezug2)) |> 
  mutate(freq_politikbezug = factor(
    freq_politikbezug, levels = c("1. Nie", "2. Selten", "3. Manchmal", "4. Häufig", "5. Sehr häufig"), labels = c("Never", "Rarely", "Sometimes", "Frequently", "Very frequently")
  ))

# Labels und Positionen der Labels auf der y-Achse bestimmen
platform_labels_marimekko <- df_marimekko |> 
  distinct(platform, pos_label) |> 
  inner_join(df_platform_users, by = join_by(platform)) |> 
  # Positionen FB und Threads manuell anpassen
  mutate(
    pos_label = case_when(
      platform == "Threads" ~ pos_label + 300,
      platform == "Facebook" ~ pos_label - 300,
      TRUE ~ pos_label
    ),
    platform_label = sprintf(
      "**%s**%s(%s)", platform, 
      ifelse(platform %in% c("Threads", "Facebook"), " ", "<br>"),
      scales::percent(share_users, accuracy = 0.1, decimal.mark = "."))
  )

n_responses_v32 <- sum(!is.na(df$v32_1))

df_marimekko |> 
  ggplot(aes(fill = freq_politikbezug)) +
  geom_rect(
    aes(xmin = share_politikbezug_cumul_lag, xmax = share_politikbezug_cumul,
        ymin = n_nutzer_platform_cumul_lag, ymax = n_nutzer_platform_cumul),
    color = "white"
  ) +
  scale_x_continuous(
    labels = scales::label_percent(), breaks = seq(0, 1, 0.1), position = "top",
    expand = expansion(mult = c(0, 0))) +
  scale_y_continuous(
    breaks = platform_labels_marimekko$pos_label,
    labels = platform_labels_marimekko$platform_label,
    expand = c(0, 0)
  ) +
  scale_fill_manual(values = c(
    color_pal[4], colorspace::lighten(color_pal[4], 0.3), 
    "grey75", 
    colorspace::lighten(color_pal[2], 0.3), color_pal[2])) +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(
    title = "Young people see political content most frequently on TikTok",
    subtitle = "Distribution of political content on selected social media platforms.
The height of the bars indicates how many people use each platform (multiple answers possible).",
    caption = sprintf(
      "Question: When you think about the posts you have seen on your social networks in the past week, how often did they relate to politicians, parties, or political topics concerning the European elections?
      <br><br>
      Data: Youth Election Study on the 2024 European Elections (%s respondents aged 15 to 20).
      Visualization: Ansgar Wolsing & Thorsten Faas.", 
      scales::number(n_responses_v32, big.mark = ",")),
    x = "Share (in %)", y = NULL, fill = NULL
    
  ) +
  theme(
    legend.position = "top",
    axis.text = element_text(size = 12),
    axis.text.y = element_markdown(hjust = 0, lineheight = 0.9),
    panel.grid.major.x = element_line(),
    panel.grid.minor.x = element_line(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    plot.margin = margin(t = 4, r = 16, b = 4, l = 4)
    )
```

### 
