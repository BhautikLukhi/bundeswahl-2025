---
title: "05 Kandidaten"
format:
  html:
    code-fold: true
    message: false
    warning: false
---

```{r setup}
library(tidyverse)
library(ggtext)
library(here)

knitr::opts_chunk$set(dev = "ragg_png")

# source(here("R", "custom-theme.R"))

# Custom theme
theme_custom <- function(base_size = 13, ...) {
  theme_minimal(base_family = "Roboto Condensed", base_size = base_size) +
    theme(
      plot.background = element_rect(color = "white", fill = "white"),
      plot.margin = margin(t = 4, l = 6, r = 6, b = 2),
      plot.title = element_markdown(
        family = "Roboto Slab", face = "bold", lineheight = 1.25),
      plot.title.position = "plot",
      plot.subtitle = element_textbox(
        family = "Roboto Slab", lineheight = 1.25, width = 1),
      plot.caption = element_textbox(
        family = "Roboto Slab", hjust = 0, lineheight = 1.1, width = 1,
        margin = margin(t = 4, b = 8)),
      axis.text.x = element_text(family = "Roboto Condensed SemiBold"),
      strip.text = element_text(family = "Roboto Condensed SemiBold", size = 11)
    )  
}
theme_set(theme_custom())

# Party colors
party_pal <- c(
  "SPD" = "#E3000F",
  "CDU/CSU" = "#000000",
  "CDU" = "#000000",
  "CSU" = "#000000",
  "FDP" = "#FFEF00",
  "Grüne" = "#1AA037",
  "AfD" = "#0489DB",
  "Linke" = "#BD4459",
  "Linke.PDS" = "#BD4459",
  "BSW" = "#F39324"
  )
```

## Daten

```{r load-data}
df_skalo <- read_tsv(here("data", "Politbarometer", "politbarometer-kandidaten.tsv"))
```

## Visualisierung

##### Variante mit vollständiger Kandidatennennung in Fußnote

```{r}

kandidaten_hinweis <- df_skalo |> 
  filter(!kandidat %in% c("Merkel", "Schröder", "Schmidt", "Kohl", "Merz", "Scholz", 
                          "Baerbock", "Habeck", "Laschet", "Strauß")) |> 
  transmute(wahl_kandidat_label = paste(wahl, kandidat, sep = " "))

```

```{r plot-skalo-3b, fig.width = 7.5, fig.height=7.5}
annotation_size <- 4.25

kandidaten_hinweis <- df_skalo |> 
  filter(!kandidat %in% c("Merkel", "Schröder", "Schmidt", "Kohl", "Merz", "Scholz", 
                          "Baerbock", "Habeck", "Laschet", "Strauß")) |> 
  transmute(wahl_kandidat_label = paste(wahl, kandidat, sep = " "))

df_skalo |> 
  filter(!(wahl == 2021 & kandidat == "Merkel")) |> 
  mutate(wahl_fct = factor(wahl)) |> 
  ggplot(aes(wahl_fct, bewertung, fill = partei)) +
  geom_vline(
    aes(xintercept = wahl_fct), 
    linewidth = 9, color = alpha("grey80", 0.3)) +
  geom_hline(aes(yintercept = 0), linewidth = 0.5) +
  geom_line(
    aes(group = kandidat),
    linetype = "dashed", linewidth = 0.3, col = "grey50"
  ) +
  geom_point(
    aes(
      shape = ifelse(kandidat == "Merkel" & wahl == "2021", 4, 21),
      col = ifelse(kandidat == "Merkel" & wahl == "2021", "black", "white")),
    size = annotation_size) +
  geom_text(
    data = ~filter(.,
                   wahl %in% c(2005, 2021) & kandidat == "Merkel" |
                   wahl == 1980 |
                   wahl == 1983 & kandidat == "Kohl" |
                   wahl == 1998 & kandidat == "Schröder" |
                   kandidat == "Scholz" |
                   kandidat == "Habeck" |
                   kandidat == "Merz"
                   ),
    aes(label = kandidat),
    family = "Roboto Condensed Medium", size = annotation_size,
    hjust = 0, nudge_x = 0.2
  ) +
  annotate(
    "richtext",
    x = c("1987", "2021", "2021"), 
    y = c(0.33, -0.55, 0.2), 
    label = c(
      "<span style='font-family: Roboto Condensed'>Kohl war 
      bislang<br>der **unbeliebteste<br>erfolgreiche**<br>Kanzlerkandidat</span>",
      "Laschet",
      "Baerbock"),
    vjust = c(1, 0.5, 0.5),
    hjust = c(0, 1, 1),
    fill = NA, label.size = 0, family = "Roboto Condensed Medium", 
    size = annotation_size, lineheight = 1
  ) +
  annotate(
    GeomCurve,
    x = "1987",
    xend = "1987",
    y = 0.31,
    yend = 0.6,
    curvature = -0.3, linewidth = 0.2
  ) +
  scale_x_discrete(position = "top") +
  scale_y_continuous(labels = scales::label_number(style_positive = "plus")) +
  scale_fill_manual(values = party_pal) +
  scale_shape_identity() +
  scale_color_identity() +
  coord_cartesian(ylim = c(-1, 3), clip = "off") +
  guides(fill = "none") +
  labs(
    title = "Noch nie waren Kanzlerkandidaten so unbeliebt",
    subtitle = "Bewertungen im Politbarometer",
    caption = paste(
      paste(
        paste("Nicht genannte Kandidaten:",
       paste(kandidaten_hinweis$wahl_kandidat_label, collapse = ", ")),
       "Bewertung der Kandidat:innen in der jeweils letzten Politbarometer-Erhebung 
       vor der Bundestagswahl auf einer Skala von -5 bis +5 (2025: Politbarometer Februar II)",
      "Daten: Politbarometer (via GESIS & forschungsgruppe.de).
        Visualisierung: Ansgar Wolsing & Thorsten Faas", sep = "<br><br>"
    )),
    x = NULL, y = NULL 
  ) +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.text.y = element_text(family = "Roboto Condensed SemiBold", size = 12),
    axis.text.x.top = element_text(family = "Roboto Condensed SemiBold", size = 14),
    plot.subtitle = element_textbox(margin = margin(b = 20)),
    plot.margin = margin(t = 6, r = 24, b = 6, l = 6)
  )
```

##### Variante mit vollständiger Kandidatennennung in Kopfzeile

Namen der Kandidaten zusammenfügen und mit Marker für Parteifarbe versehen.

```{r}
df_kandidaten_pro_btw <- df_skalo |> 
  filter(!(kandidat == "Merkel" & wahl == 2021)) |> 
  mutate(
    party_color = party_pal[partei],
    kandidat = ifelse(gewaehlter_kanzler, sprintf("<b>%s</b>", kandidat), kandidat)
    ) |> 
  select(wahl, kandidat, party_color) |> 
  group_by(wahl) |> 
  summarize(kandidaten_label = str_c(
      sprintf("<span style='font-size: 7pt;color:%s'>\U25B6</span>%s", 
              party_color, kandidat), 
      collapse = "<br>"
    ),
    .groups = "drop") |> 
  mutate(wahl_fct = factor(wahl))
```

```{r plot-skalo-4, fig.width = 9, fig.height=6}

annotation_size <- 4.25

df_skalo |> 
  filter(!(wahl == 2021 & kandidat == "Merkel")) |> 
  mutate(wahl_fct = factor(wahl)) |> 
  ggplot(aes(wahl_fct, bewertung, fill = partei)) +
  geom_vline(
    aes(xintercept = wahl_fct), 
    linewidth = 9, color = alpha("grey80", 0.3)) +
  geom_hline(aes(yintercept = 0), linewidth = 0.5) +
  geom_line(
    aes(group = kandidat),
    linetype = "dashed", linewidth = 0.3, col = "grey50"
  ) +
  geom_point(
    aes(
      shape = ifelse(kandidat == "Merkel" & wahl == "2021", 4, 21),
      col = ifelse(kandidat == "Merkel" & wahl == "2021", "black", "white")),
    size = annotation_size) +
  geom_richtext(
    data = df_kandidaten_pro_btw,
    aes(wahl_fct, 
        # y = 3.4,
        y = ifelse(wahl == 2025, 3.45, 3.4),
        label = kandidaten_label,
        vjust = ifelse(wahl == 2025, 0.6, 0.5)
        ),
    inherit.aes = FALSE,
    family = "Roboto Condensed", size = 4, hjust = 0, 
    lineheight = 0.85, nudge_x = -0.1, fill = NA, label.size = 0, angle = 45
  ) +
  annotate(
    "richtext",
    x = "1987", 
    y = 0.45, 
    label = "<span style='font-family: Roboto Condensed'>Kohl war 
      bislang<br>der **unbeliebteste<br>erfolgreiche**<br>Kanzlerkandidat</span>",
    vjust = 1, hjust = 0,
    fill = NA, label.size = 0, family = "Roboto Condensed Medium", 
    size = annotation_size, lineheight = 1
  ) +
  annotate(
    GeomCurve,
    x = "1987",
    xend = "1987",
    y = 0.31,
    yend = 0.6,
    curvature = -0.3, linewidth = 0.2
  ) +
  scale_x_discrete(position = "bottom") +
  scale_y_continuous(labels = scales::label_number(style_positive = "plus")) +
  scale_fill_manual(values = party_pal) +
  scale_shape_identity() +
  scale_color_identity() +
  coord_cartesian(ylim = c(-1, 3), clip = "off") +
  guides(fill = "none") +
  labs(
    title = "Noch nie waren Kanzlerkandidaten so unbeliebt",
    subtitle = "Bewertungen im Politbarometer",
    caption = paste(
       "Bewertung der Kandidat:innen in der jeweils letzten Politbarometer-Erhebung 
       vor der Bundestagswahl auf einer Skala von -5 bis +5 (2025: Politbarometer Februar II)",
      "Daten: Politbarometer (via GESIS & forschungsgruppe.de).
        Visualisierung: Ansgar Wolsing & Thorsten Faas", sep = "<br><br>"
    ),
    x = NULL, y = NULL
  ) +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.text.y = element_text(family = "Roboto Condensed SemiBold", size = 12),
    axis.text.x = element_text(family = "Roboto Condensed SemiBold", size = 14),
    axis.text.x.top = element_text(family = "Roboto Condensed SemiBold", size = 14),
    plot.subtitle = element_textbox(margin = margin(b = 60)),
    plot.caption = element_textbox(margin = margin(t = 8, b = 6)),
    plot.margin = margin(t = 6, r = 24, b = 6, l = 6)
  )
```
