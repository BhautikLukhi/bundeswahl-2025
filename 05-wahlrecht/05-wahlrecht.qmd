---
title: "06 Wahlrecht"
format:
  html:
    code-fold: true
    message: false
    warning: false
---

```{r setup}
library(tidyverse)
library(ggtext)
library(here)
library(ggbeeswarm)
library(patchwork)

knitr::opts_chunk$set(dev = "ragg_png")

source(here("R", "custom-theme.R"))
theme_set(theme_custom())
```

## Daten

### Laden der Daten

Die Datensätze mit den Stimmenanteilen in den Wahlkreisen bei den Bundestagswahlen 1949 bis 2021 weisen zahlreiche unterschiedliche Formate und Zeichencodierung auf. Dieser Code berücksichtigt die Unterschiede.

Bei der ersten [Bundestagswahl von 1949](https://www.bundestag.de/parlament/geschichte/75jahre/erster_bundestag/wahl1949-933578) hatten die Wählenden nur eine Stimme.

#### Sammelfunktion

```{r load-data-function}

# Seit 2005 ist die Partei nur einmal in der obersten Headerzeile genannt, 
  # danach leere Spalten
  expand_header <- function(header) {
    parts <- str_split(header, ";")
    expanded <- accumulate(parts, ~ ifelse(.y == "" | is.na(.y), .x, .y))
    expanded
  }

prepare_header <- function(x, year) {
  x <- x |> 
    unlist() |> 
    as.character() 
  
  if (year > 1949) {
    x <- expand_header(x)  
  }
  x
}

has_data <- function(x) {
  sum(!is.na(x)) > 0 
}


load_data <- function(year) {
  
  filename <- here("data", "Wahlkreise", 
                   "btw_kerg", sprintf("btw%s_kerg.csv", year))
  
  encoding <- guess_encoding(filename) |> 
    pull(encoding) |> 
    head(1)
  
  df_wk_head_lines <- read_lines(filename, 
                          locale = locale("de", encoding = encoding), n_max = 10)
  
  # Erste Datenzeile finden
  # unterschiedliche Struktur:
  ## bis einschließlich 2017 sind die ersten Nichtdatenzahlen mit # vorangestellt
  if (year <= 2017) {
    skip_rows <- max(which(str_detect(df_wk_head_lines, "^#")))
  } else if (year == 2021) {
    skip_rows <- 2 
  } else if (year == 2025) {
    skip_rows <- 5
  }
  
  # Kopfzeile extrahieren und neu kombinieren (einzeilig)
  ## Ab 2002 haben die Datensätze eine 3. Kopfzeile: "Endgültig,Vorperiode"
  df_wk_head <- read_csv2(filename, 
                          locale = locale("de", encoding = encoding), 
                          skip = skip_rows, # n_max = 100, 
                          col_names = FALSE,
                          show_col_types = FALSE)
  
  # Leere Spalten am Ende entfernen
  df_wk_head <- select(df_wk_head, where(has_data))
  
  header_1 <- prepare_header(df_wk_head[1, ], year)
  header_2 <- prepare_header(df_wk_head[2, ], year)
  
  colnames_combined <- case_when(
    header_1 == "" | is.na(header_1) ~ header_2,
    header_2 == "" | is.na(header_2) ~ header_1,
    TRUE ~ paste(header_1, header_2, sep = "_")
  )
  
  if (year >= 2005) {
    skip_rows <- skip_rows + 1
    header_3 <- df_wk_head[3, ] |> unlist() |> as.character()
    colnames_combined <- ifelse(
      header_3 != "" & !is.na(header_3), 
      paste(colnames_combined, header_3, sep = "_"), colnames_combined)
  }
  # head(colnames_combined, 10)
  
  # Daten vollständig einlesen
  df_wk <- read_csv2(filename, skip = skip_rows + 2, col_names = FALSE,
                     show_col_types = FALSE)
  # df_wk <- select(df_wk, where(has_data))
  colnames(df_wk) <- colnames_combined
  
  # In manchen Dateien sind leere Spalten ohne Spaltennamen (NA) enthalten
  df_wk <- df_wk[!is.na(names(df_wk))]
  
  # Entferne Variablen der Vorperiode (ab 2009)
  if (year >= 2005) {
    df_wk <- df_wk |> 
      select(-ends_with("_Vorperiode"))
  }
    
  # Angleichung der Spaltennamen
  if (year == 1949) {
    df_wk <- df_wk |> 
      rename(wknr = 1, wkname = 2, bundesland = 3, 
             wahlberechtigte = 4,
             waehler = 5,
             ungueltige = 6,
             gueltige = 7) |> 
      filter(!is.na(wknr)) 
  } else if (year > 1949 & year < 2005) {
      df_wk <- df_wk |> 
        rename(wknr = 1, wkname = 2, bundesland = 3, 
               wahlberechtigte = 4,
               waehler = 5,
               ungueltige = 6, ungueltige_Zweitstimmen = 7,
               gueltige_Erststimmen = 8, gueltige_Zweitstimmen = 9) |> 
        filter(!is.na(wknr)) 
  } else if (year >= 2005 & year <= 2021) {
    df_wk <- df_wk |> 
      rename(wknr = 1, wkname = 2, bundesland = 3, 
             wahlberechtigte = 4, wahlberechtigte_Zweitstimmen = 5,
             waehler = 6, waehler_Zweitstimmen = 7,
             ungueltige = 8, ungueltige_Zweitstimmen = 9,
             gueltige_Erststimmen = 10, gueltige_Zweitstimmen = 11) |> 
      select(-c(wahlberechtigte_Zweitstimmen, waehler_Zweitstimmen, 
                ungueltige_Zweitstimmen)) |> 
      filter(!is.na(wknr)) 
    colnames(df_wk) <- str_remove(colnames(df_wk), "_Endgültig")  
  } else if (year == 2025) {
    df_wk <- df_wk |> 
      rename(wknr = 1, wkname = 2, bundesland = 3, 
             gewaehlt = 4, # neue Spalte für Partei des Mandatsgewinners
             wahlberechtigte = 5, wahlberechtigte_Zweitstimmen = 6,
             waehler = 7, waehler_Zweitstimmen = 8,
             ungueltige = 9, ungueltige_Zweitstimmen = 10,
             gueltige_Erststimmen = 11, gueltige_Zweitstimmen = 12) |> 
      select(-c(wahlberechtigte_Zweitstimmen, waehler_Zweitstimmen, 
                ungueltige_Zweitstimmen)) |> 
      filter(!is.na(wknr)) 
    colnames(df_wk) <- str_remove(colnames(df_wk), "_(Endgültig|Vorläufig)")  
  }
  
  
  # Long format
  if (year == 1949) {
    df_wk_long <- df_wk |> 
      pivot_longer(cols = -c(wknr:gueltige), 
                   # Zwecks Konsistenz bewusst in partei und stimme splitten, 
                   # obwohl es die Namensstruktur hier nicht gibt
                   names_to = c("partei", "stimme"), names_sep = "_",
                   values_to = "anzahl") |> 
      pivot_longer(cols = wahlberechtigte:gueltige,
                   names_to = c("kennzahl", "stimme2"), names_sep = "_",
                   values_to = "anzahl_basis")
  } else {
    df_wk_long <- df_wk |> 
      pivot_longer(cols = -c(wknr:gueltige_Zweitstimmen), 
                   names_to = c("partei", "stimme"), names_sep = "_",
                   values_to = "anzahl") |> 
      pivot_longer(cols = wahlberechtigte:gueltige_Zweitstimmen,
                   names_to = c("kennzahl", "stimme2"), names_sep = "_",
                   values_to = "anzahl_basis") |> 
      filter(is.na(stimme2) | stimme == stimme2)
  }
  
  df_wk_long <- df_wk_long |> 
    select(-stimme2) |> 
    mutate(
      wknr = as.integer(wknr),
      bundesland = as.character(bundesland),
      kennzahl = kennzahl) |> 
    pivot_wider(
      names_from = "kennzahl", values_from = "anzahl_basis", 
      values_fn = min
    ) |> 
    mutate(anteil = anzahl / gueltige) |> 
    relocate(anteil, .before = 7)
  
  df_wk_long
}
```

#### Laden

```{r load-data, cache=TRUE, message=FALSE, warning=FALSE}

btw_years <- c(1949, 1953, 1957, 1961, 1965, 1969, 1972, 1976, 1980, 1983, 1987, 1990,
           1994, 1998, 2002, 2005, 2009, 2013, 2017, 2021, 2025)

load_data_safely <- safely(load_data)
dfs_wk <- map(btw_years, load_data_safely)
```

##### Ergebnis auf Fehler prüfen

```{r}
# dfs_wk |> 
#   transpose() |> 
#   View()
```

##### Alle BTW in einem Datensatz

```{r load-data-2, cache=TRUE, message=FALSE, warning=FALSE, output=FALSE}
dfs_wk <- map(btw_years, load_data)
dfs_wk <- set_names(dfs_wk, btw_years)
df_wk_alle <- bind_rows(dfs_wk, .id = "wahl")
```

### Datenaufbereitung

```{r prep-data-function}
prepare_firstvote_data <- function(x, year) {
  
  x <- x |> 
    # Nur Erststimmen auf Wahlkreisebene
    filter(stimme == "Erststimmen" & wknr < 900 & bundesland != "99") 
  
  if (year == 2025) {
    x <- select(x, wknr, wkname, bundesland, partei, anteil, gewaehlt)
  } else {
    x <- select(x, wknr, wkname, bundesland, partei, anteil)
  }
  
  x  |> 
    na.omit() |> 
    # Erst- und Zweitplatzierte
    group_by(wknr) |> 
    slice_max(order_by = anteil, n = 2, with_ties = FALSE) |> 
    arrange(-anteil, .by_group = TRUE) |> 
    # Abstand zum Zweitplatzierten
    mutate(anteil_zweiter = lead(anteil, default = NULL)) |> 
    # Den Zweitplatzierten entfernen
    filter(!is.na(anteil_zweiter)) |> 
    ungroup() |> 
    rename(wk_gewinner_partei = partei, anteil_gewinner = anteil) |> 
    mutate(wk_abstand = anteil_gewinner - anteil_zweiter) |> 
    mutate(wk_gewinner_partei = case_match(
      wk_gewinner_partei, 
      "GRÜNE" ~ "Grüne",
      "DIE LINKE" ~ "Linke",
      .default = wk_gewinner_partei
    ))
}
```

```{r prep-data, cache=TRUE}
dfs_wk_abstand <- map2(dfs_wk, names(dfs_wk), prepare_firstvote_data)
```

### Visualisierung

#### Beeswarm-Plot Abstand

```{r plot-beeswarm-abstand, fig.height=8}
library(ggbeeswarm)

dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  filter(wahl %in% c("1953", "1980", "1994", "2021")) |> 
  ggplot(aes(wk_abstand, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei),
    shape = 21, color = "white", size = 3
  ) + 
  scale_x_continuous(limits = c(0, 0.8)) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal)) +
  facet_grid(vars(wahl)) + 
  labs(
    title = "Abstand zwischen gewählten Direktkandierenden und<br>
    Zweitplatzierten",
    subtitle = "Jeder Punkt ist ein Wahlkreis",
    x = "Differenz Erststimmenanteile (%)",
  ) +
  theme(
    legend.position = "bottom",
    axis.text.y = element_blank(),
    axis.title.y = element_blank()
  ) 

```

#### Beeswarm-Plot Erststimmen Wahlkreisgewinner

```{r prep-wk-abstand}

df_wk_abstand <- dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  mutate(
    wk_gewinner_partei = case_match(
      wk_gewinner_partei,
      "Christlich Demokratische Union Deutschlands" ~ "CDU",
      "C D U" ~ "CDU",
      "Christlich-Soziale Union in Bayern e.V." ~ "CSU",
      "C S U" ~ "CSU",
      "Sozialdemokratische Partei Deutschlands" ~ "SPD",
      "S P D" ~ "SPD",
      "BÜNDNIS 90/DIE GRÜNEN" ~ "Grüne",
      "Linke" ~ "Linke",
      "Die Linke." ~ "Linke",
      "PDS" ~ "Linke",
      "Alternative für Deutschland" ~ "AfD",
      .default = wk_gewinner_partei
    ),
    wk_gewinner_partei = fct_infreq(wk_gewinner_partei)
  ) 
```

##### Mit den wenigsten Stimmen erlangte Direktmandate

```{r}

df_wk_abstand |> 
  arrange(anteil_gewinner) |> 
  select(wahl, anteil_gewinner, wkname, wk_gewinner_partei) |> 
  head(10)

```

```{r plot-beeswarm-erststimmen-2021}

p_beeswarm_2021 <- df_wk_abstand |> 
  filter(wahl  == "2021") |> 
  ggplot(aes(anteil_gewinner, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei, shape = wk_gewinner_partei),
    color = "white", size = 2
  ) + 
  annotate(
    "text",
    x = c(0.0, 0.45),
    y = c(1.24, 1.28),
    label = c(
      "Diese fünf Direktmandate\nwurden mit den geringsten\nStimmenanteilen in der\nGeschichte der Bundes-\nrepublik gewonnen.",
      "Nur ein einziger Direktkandidat\nholte mehr als 50 Prozent\n(Wahlkreis Aurich - Emden, SPD)"),
    family = "Roboto Condensed", size = 4.5, hjust = 0, lineheight = 0.9
  ) +
  annotate(
    GeomCurve,
    x = c(0.52, 0.13), 
    xend = c(0.528, 0.17),
    y = c(1.15, 1.06), 
    yend = c(1.03, 1),
    curvature = 0.2, 
    linewidth = 0.2, 
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  ggforce::geom_ellipse(
    aes(x0 = 0.205, y0 = 1, a = 0.04, b = 0.03, angle = pi / 3),
    linewidth = 0.2, linetype = "dashed",
  ) + 
  scale_x_continuous(
    breaks = seq(0.25, 1, 0.25),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal)) +
  scale_shape_manual(values = c("CDU" = 21, "SPD" = 21,
                                "CSU" = 22, "Linke" = 23, "Grüne" = 24, "AfD" = 25)) +
  coord_cartesian(xlim = c(0.05, 0.75), clip = "off") +
  guides(
    fill = guide_legend(nrow = 1, override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(size = 5))
  ) +
  labs(
    title = "2021",
    x = "Erststimmenanteil (%)",
    fill = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 

p_beeswarm_2021

```

```{r}
df_wk_abstand |> 
  filter(wahl  == "1980") |>
  summarize(
    mean(anteil_gewinner),
    mean(anteil_gewinner > 0.5))
```

```{r plot-beeswarm-erststimmen-1980}

p_beeswarm_1980 <- df_wk_abstand |> 
  filter(wahl  == "1980") |>
  ggplot(aes(anteil_gewinner, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei, shape = wk_gewinner_partei),
    color = "white", size = 2
  ) + 
  annotate(
    "text",
    x = 0.12,
    y = 1,
    label = "Wahlkreisgewinner mussten\nnoch über 40 Prozent holen.\n63 Prozent der Wahlkreise\nwurden mit absoluter\nMehrheit gewonnen.",
    family = "Roboto Condensed", size = 4.5, hjust = 0, lineheight = 0.9
  ) +
  # annotate(
  #   GeomCurve,
  #   x = 0.36, 
  #   xend = 0.41,
  #   y = 0.95, 
  #   yend = 0.95,
  #   curvature = 0.2, linewidth = 0.2, 
  #   arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  # ) +
  scale_x_continuous(
    breaks = seq(0.25, 1, 0.25),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal)) +
  scale_shape_manual(values = c("CDU" = 21, "SPD" = 21,
                                "CSU" = 22, "Linke" = 23, "Grüne" = 24, 
                                "AfD" = 25)) +
  coord_cartesian(xlim = c(0.05, 0.75), clip = "off") +
  guides(
    fill = "none",
    shape = "none"
  ) +
  labs(
    title = "1980",
    # x = "Erststimmenanteil (%)",
    x = NULL,
    fill = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 

p_beeswarm_1980
```

#### Beeswarms 2021 und 1980 kombiniert

```{r plot-beeswarm-2021-1980-kombi, fig.width=6, fig.height=7.2}

p_beeswarm_1980 / 
  p_beeswarm_2021 +
  plot_annotation(
    title = "Erststimmenanteile der Wahlkreisgewinner",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas")

```

```{r plot-beeswarm-erststimmen-alle, fig.width = 8, fig.height=18}
library(ggbeeswarm)

df_wk_abstand |> 
  ggplot(aes(anteil_gewinner, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei
        #, shape = wk_gewinner_partei
        ),
    color = "white", size = 2,
    shape = 21
  ) + 
  scale_x_continuous(
    breaks = seq(0.25, 1, 0.25),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal, "DP" = "grey80", "Zentrum" = "grey90")) +
  # scale_shape_manual(values = c("CDU" = 21, "SPD" = 21,
  #                               "CSU" = 22, "Linke" = 23, "Grüne" = 24, 
  #                               "AfD" = 25)) +
  # coord_cartesian(xlim = c(0, NA)) +
  facet_wrap(vars(wahl), ncol = 3, axes = "all_x", axis.labels = "all_x") +
  guides(
    fill = guide_legend(
      # nrow = 1, 
      override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(size = 5))
  ) +
  labs(
    title = "Erststimmenanteile der Wahlkreisgewinner",
    subtitle = "Jeder Punkt ist ein Wahlkreis",
    x = "Erststimmenanteil (%)",
    fill = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    strip.text = element_text(family = "Roboto Condensed SemiBold", size = 14)
  ) 

```

##### Nochmal 2021 für sich

```{r plot-beeswarm-erststimmen-2021-v02}

df_wk_abstand |> 
  filter(wahl  == "2021") |> 
  ggplot(aes(anteil_gewinner, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei, shape = wk_gewinner_partei),
    color = "white", size = 2
  ) + 
  annotate(
    "text",
    x = c(0.02, 0.45),
    y = c(1.18, 1.23),
    label = c(
      "Diese fünf Direktmandate\nwurden mit den geringsten\nStimmenanteilen in der\nGeschichte der Bundes-\nrepublik gewonnen.",
      "Nur ein einziger Direktkandidat\nholte mehr als 50 Prozent\n(Wahlkreis Aurich - Emden, SPD)"),
    family = "Roboto Condensed", size = 4.5, hjust = 0, lineheight = 0.9
  ) +
  annotate(
    GeomCurve,
    x = c(0.52, 0.13), 
    xend = c(0.528, 0.17),
    y = c(1.15, 1.06), 
    yend = c(1.03, 1),
    curvature = 0.2, 
    linewidth = 0.2, 
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  ggforce::geom_ellipse(
    aes(x0 = 0.205, y0 = 1, a = 0.04, b = 0.03, angle = pi / 3),
    linewidth = 0.2, linetype = "dashed",
  ) + 
  scale_x_continuous(
    breaks = seq(0.1, 1, 0.1),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal)) +
  scale_shape_manual(values = c("CDU" = 21, "SPD" = 21,
                                "CSU" = 22, "Linke" = 23, "Grüne" = 24, "AfD" = 25)) +
  coord_cartesian(xlim = c(0.05, 0.65), clip = "off") +
  guides(
    fill = guide_legend(nrow = 1, override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(size = 5))
  ) +
  labs(
    title = "Erststimmenanteile der Wahlkreisgewinner 2021",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = "Erststimmenanteil (%)",
    fill = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 

```

##### **2025**

Die nicht gewählten Wahlkreisgewinner mit einem Kreuz markieren.

```{r plot-beeswarm-erststimmen-2025}

df_wk_abstand |> 
  filter(wahl  == "2025") |> 
  mutate(gewaehlt = ifelse(gewaehlt == "–", "Verwaister Wahlkreis", 
                           "Zieht in den Bundestag ein")) |> 
  ggplot(aes(anteil_gewinner, y = 1)) +
  geom_quasirandom(
    aes(fill = wk_gewinner_partei, col =  wk_gewinner_partei, shape = gewaehlt),
    size = 2
  ) + 
  annotate(
    "text",
    x = c(0.48),
    y = c(1.25),
    label = c(
      "Nur eine einzige Direkt-\nkandidatin holte\nmehr als 50 Prozent\n(Bad Kissingen, CSU)"),
    family = "Roboto Condensed", size = 4.5, hjust = 0, lineheight = 0.9
  ) +
  annotate(
    GeomCurve,
    x = c(0.50), 
    xend = c(0.505),
    y = c(1.125), 
    yend = c(1.03),
    curvature = -0.2, 
    linewidth = 0.2, 
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  scale_x_continuous(
    breaks = seq(0.1, 1, 0.1),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal),
                    aesthetics = list("fill", "color")) +
  scale_shape_manual(values = c(4, 21)) +
  coord_cartesian(xlim = c(0.2, 0.6), clip = "off") +
  guides(
    fill = guide_legend(nrow = 1, override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(size = 5))
  ) +
  labs(
    title = "Erststimmenanteile der Wahlkreisbesten 2025",
    subtitle = "Wahlkreise, aus denen der Wahlkreisbeste nicht über das Direktmandat in den Bundestag einzieht, sind mit einem **\U00D7** markiert",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = "Erststimmenanteil (%)",
    fill = NULL, color = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    legend.box = "vertical",
    legend.spacing.y = unit(-2, "mm"),
    axis.text.x = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 

```

```{r plot-beeswarm-erststimmen-2025-nach-parteien, fig.height=7}
df_wk_abstand |> 
  filter(wahl  == "2025") |> 
  mutate(gewaehlt = ifelse(gewaehlt == "–", "Verwaister Wahlkreis", 
                           "Zieht in den Bundestag ein")) |> 
  ggplot(aes(anteil_gewinner, y = fct_rev(wk_gewinner_partei))) +
  geom_beeswarm(
    aes(
      fill = wk_gewinner_partei, col =  wk_gewinner_partei, shape = gewaehlt,
      size = gewaehlt),
    cex = 2
  ) + 
  scale_x_continuous(
    breaks = seq(0.1, 1, 0.1),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal),
                    aesthetics = list("fill", "color")) +
  scale_shape_manual(values = c(4, 21)) +
  scale_size_manual(values = c(3, 2)) +
  coord_cartesian(xlim = c(0.2, 0.5), clip = "off") +
  guides(
    fill = guide_legend(nrow = 1, override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(size = 5)),
    size = "none"
  ) +
  labs(
    title = "Erststimmenanteile der Wahlkreisbesten 2025",
    subtitle = "Wahlkreise, aus denen der Wahlkreisbeste nicht über das Direktmandat 
    in den Bundestag einzieht, sind mit einem **\U00D7** markiert",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = "Erststimmenanteil (%)",
    fill = NULL, color = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    legend.box = "vertical",
    legend.spacing.y = unit(-2, "mm"),
    axis.text = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_text(hjust = 0, size = 12),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 
```

```{r plot-beeswarm-erststimmen-2025-nach-parteien-v2, fig.height=7}
df_wk_abstand |> 
  filter(wahl  == "2025") |> 
  mutate(gewaehlt = ifelse(gewaehlt == "–", "Verwaister Wahlkreis", 
                           "Zieht in den Bundestag ein")) |> 
  ggplot(aes(anteil_gewinner, y = fct_rev(wk_gewinner_partei))) +
  geom_beeswarm(
    aes(
      fill = wk_gewinner_partei, col =  wk_gewinner_partei, shape = gewaehlt),
    cex = 2, size = 2.25
  ) + 
  scale_x_continuous(
    breaks = seq(0.1, 1, 0.1),
    labels = scales::label_percent()) +
  scale_fill_manual(values = c("CSU" = "grey40", party_pal),
                    aesthetics = list("fill", "color")) +
  scale_shape_manual(values = c(1, 21)) +
  # scale_size_manual(values = c(3, 2)) +
  coord_cartesian(xlim = c(0.2, 0.5), clip = "off") +
  guides(
    fill = guide_legend(nrow = 1, override.aes = list(size = 5)),
    shape = guide_legend(nrow = 1, override.aes = list(fill = "grey40", size = 5)),
    size = "none"
  ) +
  labs(
    title = "Erststimmenanteile der Wahlkreisbesten 2025",
    subtitle = "Wahlkreise, aus denen der Wahlkreisbeste nicht über das Direktmandat 
    in den Bundestag einzieht, sind mit einem **\U25CB** markiert",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = "Erststimmenanteil (%)",
    fill = NULL, color = NULL, shape = NULL
  ) +
  theme(
    legend.position = "bottom",
    legend.box = "vertical",
    legend.spacing.y = unit(-2, "mm"),
    axis.text = element_text(family = "Roboto Condensed SemiBold"),
    axis.text.y = element_text(hjust = 0, size = 12),
    axis.title.y = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  ) 
```

#### Gestapeltes Balkendiagramm: Abstand über Zeit

```{r}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  # Abstand gruppiert
  arrange(wk_abstand) |> 
  mutate(wk_abstand_grp = case_when(
    wk_abstand < 0.02 ~ "Weniger als 2 %",
    wk_abstand < 0.05 ~ "2 bis unter 5 %",
    wk_abstand < 0.10 ~ "5 bis unter 10 %",
    wk_abstand < 0.20 ~ "10 bis unter 20 %",
    wk_abstand < 0.30 ~ "20 bis unter 30 %",
    TRUE ~ "30 oder mehr %"),
    wk_abstand_grp = fct_inorder(wk_abstand_grp),
    wk_abstand_grp = fct_rev(wk_abstand_grp),
    wahl = fct_rev(wahl)
    ) |> 
  arrange(wahl, wknr) |>
  count(wahl, wk_abstand_grp, name = "n_wahlkreise") |> 
  group_by(wahl) |> 
  mutate(anteil = n_wahlkreise / sum(n_wahlkreise)) |> 
  ungroup() |> 
  ggplot(aes(anteil, wahl, fill = wk_abstand_grp)) +
  geom_col(col = "white") +
  scale_x_continuous(
    labels = scales::label_percent(), position = "top",
    expand = expansion(mult = c(0, 0.02))) +
  scale_fill_brewer() +
  labs(
    title = "Abstand zwischen gewählten Direktkandierenden und<br>
    Zweitplatzierten",
    x = "Anteil Wahlkreise (%)",
    y = NULL
  ) +
  theme(
    legend.position = "top",
    legend.justification = "left",
    panel.grid = element_blank()
  ) 

```

#### Liniendiagramm verschiedene Wahlausgänge

```{r plot-line-wahlausgaenge}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  group_by(wahl) |> 
  summarize(
    anteil_lt10 = mean(wk_abstand < 0.1),
    anteil_gt30 = mean(wk_abstand > 0.3),
    anteil_gewinner_gt50 = mean(anteil_gewinner > 0.5)
    ) |> 
  ggplot(aes(wahl, group = 1)) +
  geom_line(aes(y = anteil_lt10, col = "Kleiner 10 %"), linewidth = 1) +
  geom_line(aes(y = anteil_gt30, col = "Größer als 30 %"), linewidth = 1)  +
  geom_line(aes(y = anteil_gewinner_gt50, 
                col = "Stimmenanteil Gewinner größer als 50 %"), linewidth = 1)  +
  scale_y_continuous(labels = scales::label_percent()) +
  scale_color_manual(values = color_pal[2:4]) +
  labs(
    title = "Mehr Wahlkreise mit knappen Ausgang und weniger Wahlkreise,<br>die mit absoluter Mehrheit gewonnen werden",
    x = NULL,
    y = "Anteil (%)",
    col = "Wahlausgang"
  ) +
  theme(legend.position = "top")
```

#### Liniendiagramm verschiedene Wahlausgänge

Bis 2021

```{r plot-erststimmen-mittelwert}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  filter(wahl < 2025) |> 
  mutate(wahl = as.numeric(wahl)) |> 
  group_by(wahl) |> 
  summarize(
    mean_anteil_gewinner = mean(anteil_gewinner),
    min_anteil_gewinner = min(anteil_gewinner),
    max_anteil_gewinner = max(anteil_gewinner),
    pct10_anteil_gewinner = quantile(anteil_gewinner, probs = 0.1),
    pct90_anteil_gewinner = quantile(anteil_gewinner, probs = 0.9)
    ) |>
  ggplot(aes(wahl, mean_anteil_gewinner, group = 1)) +
  geom_ribbon(
    aes(ymin = min_anteil_gewinner, ymax = max_anteil_gewinner),
    fill = alpha(color_pal[2], 0.1), color = color_pal[2],
    linetype = "dashed", linewidth = 0.2) +
  geom_ribbon(
    aes(ymin = pct10_anteil_gewinner, ymax = pct90_anteil_gewinner),
    fill = alpha(color_pal[2], 0.2), color = color_pal[2],
    linetype = "dashed", linewidth = 0.2) +
  geom_line(
    color = color_pal[1], linewidth = 1.2) +
  annotate(
    "text",
    x = c(1970, 1990, 2010),
    y = c(0.32, 0.22, 0.13),
    label = c("Durchschnitt", "90 % aller Wahlkreise\nliegen in diesem Bereich",
          "Alle Wahlkreise"),
    family = "Roboto Condensed", hjust = 0, size = 4, lineheight = 0.9,
    vjust = 1
  ) +
  annotate(
    GeomCurve,
    x = c(1970, 1990, 2010),
    xend = c(1970, 1990, 2010),
    y = c(0.328, 0.228, 0.138),
    yend = c(0.55, 0.43, 0.27),
    curvature = -0.2, linewidth = 0.2,
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  scale_x_continuous(
    breaks = seq(1950, 2020, 10),
    expand = expansion(mult = c(0, 0.02))) +
  scale_y_continuous(
    breaks = seq(0, 1, 0.25),
    labels = scales::label_percent()) +
  scale_color_manual(values = color_pal[2:4]) +
  coord_cartesian(ylim = c(0, NA)) +
  labs(
    title = "Erststimmen-Anteil der Wahlkreisgewinner ist von 55 %<br>
    in den 1980ern auf 33 % in 2021 gesunken",
    subtitle = "Anteil der Erststimmen (%)",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = NULL, y = NULL,
    col = "Wahlausgang"
  ) +
  theme(
    axis.text.x = element_text(family = "Roboto Condensed SemiBold")
  )
```

##### Inkl. 2025

```{r plot-erststimmen-mittelwert-2025}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |>
  mutate(wahl = as.numeric(wahl)) |> 
  group_by(wahl) |> 
  summarize(
    mean_anteil_gewinner = mean(anteil_gewinner),
    min_anteil_gewinner = min(anteil_gewinner),
    max_anteil_gewinner = max(anteil_gewinner),
    pct10_anteil_gewinner = quantile(anteil_gewinner, probs = 0.1),
    pct90_anteil_gewinner = quantile(anteil_gewinner, probs = 0.9)
    ) |> 
  ggplot(aes(wahl, mean_anteil_gewinner, group = 1)) +
  geom_ribbon(
    aes(ymin = min_anteil_gewinner, ymax = max_anteil_gewinner),
    fill = alpha(color_pal[2], 0.1), color = color_pal[2],
    linetype = "dashed", linewidth = 0.2) +
  geom_ribbon(
    aes(ymin = pct10_anteil_gewinner, ymax = pct90_anteil_gewinner),
    fill = alpha(color_pal[2], 0.2), color = color_pal[2],
    linetype = "dashed", linewidth = 0.2) +
  geom_line(
    color = color_pal[1], linewidth = 1.2) +
  annotate(
    "text",
    x = c(1970, 1990, 2010),
    y = c(0.32, 0.22, 0.13),
    label = c("Durchschnitt", "90 % aller Wahlkreise\nliegen in diesem Bereich",
          "Alle Wahlkreise"),
    family = "Roboto Condensed", hjust = 0, size = 4, lineheight = 0.9,
    vjust = 1
  ) +
  annotate(
    GeomCurve,
    x = c(1970, 1990, 2010),
    xend = c(1970, 1990, 2010),
    y = c(0.328, 0.228, 0.138),
    yend = c(0.55, 0.43, 0.27),
    curvature = -0.2, linewidth = 0.2,
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  scale_x_continuous(
    breaks = seq(1950, 2020, 10),
    expand = expansion(mult = c(0, 0.02))) +
  scale_y_continuous(
    breaks = seq(0, 1, 0.25),
    labels = scales::label_percent()) +
  scale_color_manual(values = color_pal[2:4]) +
  coord_cartesian(ylim = c(0, NA)) +
  labs(
    title = "Erststimmen-Anteil der Wahlkreisgewinner ist von 55 %<br>
    in den 1980ern auf 36 % in 2025 gesunken",
    subtitle = "Anteil der Erststimmen (%)",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = NULL, y = NULL,
    col = "Wahlausgang"
  ) +
  theme(
    axis.text.x = element_text(family = "Roboto Condensed SemiBold")
  )
```

```{r plot-anteile-wk-gewinner-absolut}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  mutate(wahl = as.numeric(wahl)) |> 
  filter(wahl < 2025) |> 
  group_by(wahl) |> 
  summarize(
    mean_anteil_gewinner_absolut = mean(anteil_gewinner > 0.5)
    ) |>
  ggplot(aes(wahl, mean_anteil_gewinner_absolut, group = 1)) +
  geom_area(
    color = color_pal[2], linewidth = 1.2, fill = alpha(color_pal[2], 0.1)) +
  annotate(
    "text",
    x = c(1968, 2010),
    y = c(0.53, 0.5),
    label = c("1972: mehr als 80 % der\nWahlkreise mit absoluter\nErststimmenmehrheit\ngewonnen",
              "2021: ein einziger\nWahlkreis (Aurich -\nEmden, SPD)"),
    family = "Roboto Condensed", hjust = 0, size = 4, lineheight = 0.9,
    vjust = 1
  ) +
  geom_point(
    data = ~filter(., wahl %in% c(1972, 2021)),
    aes(),
    col = color_pal[2], size = 3
  ) +
  annotate(
    GeomCurve,
    x = c(1972, 2021),
    xend = c(1972, 2021),
    y = c(0.55, 0.35),
    yend = c(0.76, 0.03),
    curvature = -0.1, linewidth = 0.2,
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  scale_x_continuous(
    breaks = seq(1950, 2020, 10),
    expand = expansion(mult = c(0, 0.02))) +
  scale_y_continuous(
    breaks = seq(0, 1, 0.25),
    labels = scales::label_percent()) +
  coord_cartesian(ylim = c(0, NA), clip = "off") +
  labs(
    title = "Immer weniger mit absoluter Mehrheit gewonnene Direktmandate",
    subtitle = "Anteil der mit mehr als 50 % der Erststimmen gewonnenen Wahlkreise (in %)",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = NULL, y = NULL,
    # y = "Anteil (%)",
    col = "Wahlausgang"
  ) +
  theme(
    axis.text.x = element_text(family = "Roboto Condensed SemiBold")
  )
```

##### Inkl. 2025

```{r plot-anteile-wk-gewinner-absolut-2025}
dfs_wk_abstand |> 
  bind_rows(.id = "wahl") |> 
  mutate(wahl = as.numeric(wahl)) |> 
  group_by(wahl) |> 
  summarize(
    mean_anteil_gewinner_absolut = mean(anteil_gewinner > 0.5)
    ) |>
  ggplot(aes(wahl, mean_anteil_gewinner_absolut, group = 1)) +
  geom_area(
    color = color_pal[2], linewidth = 1.2, fill = alpha(color_pal[2], 0.1)) +
  annotate(
    "text",
    x = c(1968, 2015),
    y = c(0.53, 0.5),
    label = c("1972: mehr als 80 % der\nWahlkreise mit absoluter\nErststimmenmehrheit\ngewonnen",
              "2021 & 2025\njeweils\nein einziger\nWahlkreis"),
    family = "Roboto Condensed", hjust = 0, size = 4, lineheight = 0.9,
    vjust = 1
  ) +
  geom_point(
    data = ~filter(., wahl %in% c(1972, 2021, 2025)),
    aes(),
    col = color_pal[2], size = 3
  ) +
  annotate(
    GeomCurve,
    x = c(1972, 2021),
    xend = c(1972, 2021),
    y = c(0.55, 0.315),
    yend = c(0.76, 0.03),
    curvature = -0.1, linewidth = 0.2,
    arrow = arrow(angle = 20, length = unit(0.25, "cm"))
  ) +
  scale_x_continuous(
    breaks = seq(1950, 2020, 10),
    expand = expansion(mult = c(0, 0.02))) +
  scale_y_continuous(
    breaks = seq(0, 1, 0.25),
    labels = scales::label_percent()) +
  coord_cartesian(ylim = c(0, NA), clip = "off") +
  labs(
    title = "Immer weniger mit absoluter Mehrheit gewonnene Direktmandate",
    subtitle = "Anteil der mit mehr als 50 % der Erststimmen gewonnenen Wahlkreise (in %)",
    caption = "Daten: Bundeswahlleiterin.
    Visualisierung: Ansgar Wolsing & Thorsten Faas",
    x = NULL, y = NULL,
    # y = "Anteil (%)",
    col = "Wahlausgang"
  ) +
  theme(
    axis.text.x = element_text(family = "Roboto Condensed SemiBold")
  )
```
